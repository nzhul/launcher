name: Make and Publish to Github

on:
  push:
    branches:
      - master

permissions:
  contents: write

env:
  SHOULD_PUBLISH: 'false'

jobs:
  create-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: 18
          cache: 'yarn'


      # this check works by first searching for '<WHATEVER> 1.2.3' in the commit message
      # if it cannot find it in the commit message, it start diff check search
      # diff check is slower and it is recommended to use the first option
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2

      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Set SHOULD_PUBLISH to true
        if: steps.check.outputs.changed == 'true'
        run: 'echo "SHOULD_PUBLISH=true"'
        outputs:
          SHOULD_PUBLISH: ${{ steps.check.outputs.changed }}

      - name: Log when unchanged
        if: steps.check.outputs.changed == 'false'
        run: 'echo "No version change :/"'

      - name: Create Release
        if: steps.check.outputs.changed == 'true'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{steps.check.outputs.version}}
          release_name: Release v${{steps.check.outputs.version}}
          body: |
            Changes in this release:
            - Add new feature (todo: resolve dynamically)
            - Bug fixes
          draft: false
          prerelease: false

  build_on_win:
    needs: create-release
    if: ${{needs.create-release.outputs.SHOULD_PUBLISH}} == 'true'
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --network-timeout 600000
      - name: Publish
        run: yarn run publish

        # dido: try to create release first by extracting the package version from package.json
        # only after that execute yarn run publish


  # build_on_win:
  #   runs-on: windows-latest
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@master
  #       with:
  #         node-version: 18
  #         cache: 'yarn'
  #     # - name: Install dependencies
  #     #   run: yarn install --network-timeout 600000

        
        # dido: try to create release first by extracting the package version from package.json
        # this will require me to change the version every time when I want new release
        # what I can do is to check if the version has been changed.
        # if yes > trigger the release
        # version-checker: https://github.com/marketplace/actions/version-check
        # get current release version: https://github.com/marketplace/actions/get-current-package-version
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   with:
      #     tag_name: v${{github.run_number}} # Replace with the desired tag name for the release
      #     release_name: Release v${{github.run_number}} # Replace with the desired name for the release
      #     body: |
      #       Changes in this release:
      #       - Add new feature (todo: resolve dynamically)
      #       - Bug fixes
      #     draft: false
      #     prerelease: false

      # - name: Publish
      #   run: yarn run publish
